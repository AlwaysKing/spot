#include <algorithm>
#include <string.h>

#include "Common.hpp"
#include "Math.hpp"

#if 1
static const uint8_t e5[32] = {
     0,     8,    16,    24,    33,    41,    49,    57,    66,    74,    82,    90,    99,   107,   115,   123,
   132,   140,   148,   156,   165,   173,   181,   189,   198,   206,   214,   222,   231,   239,   247,   255};
static const uint8_t e6[64] = {
     0,     4,     8,    12,    16,    20,    24,    28,    32,    36,    40,    44,    48,    52,    56,    60,
    65,    69,    73,    77,    81,    85,    89,    93,    97,   101,   105,   109,   113,   117,   121,   125,
   130,   134,   138,   142,   146,   150,   154,   158,   162,   166,   170,   174,   178,   182,   186,   190,
   195,   199,   203,   207,   211,   215,   219,   223,   227,   231,   235,   239,   243,   247,   251,   255};
static const uint8_t qrb[256+16] = {
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     8,     8,     8,
     8,     8,     8,     8,     8,    16,    16,    16,    16,    16,    16,    16,    16,    24,    24,    24,
    24,    24,    24,    24,    24,    33,    33,    33,    33,    33,    33,    33,    33,    33,    41,    41,
    41,    41,    41,    41,    41,    41,    49,    49,    49,    49,    49,    49,    49,    49,    57,    57,
    57,    57,    57,    57,    57,    57,    66,    66,    66,    66,    66,    66,    66,    66,    74,    74,
    74,    74,    74,    74,    74,    74,    74,    82,    82,    82,    82,    82,    82,    82,    82,    90,
    90,    90,    90,    90,    90,    90,    90,    99,    99,    99,    99,    99,    99,    99,    99,   107,
   107,   107,   107,   107,   107,   107,   107,   107,   115,   115,   115,   115,   115,   115,   115,   115,
   123,   123,   123,   123,   123,   123,   123,   123,   132,   132,   132,   132,   132,   132,   132,   132,
   140,   140,   140,   140,   140,   140,   140,   140,   148,   148,   148,   148,   148,   148,   148,   148,
   148,   156,   156,   156,   156,   156,   156,   156,   156,   165,   165,   165,   165,   165,   165,   165,
   165,   173,   173,   173,   173,   173,   173,   173,   173,   181,   181,   181,   181,   181,   181,   181,
   181,   181,   189,   189,   189,   189,   189,   189,   189,   189,   198,   198,   198,   198,   198,   198,
   198,   198,   206,   206,   206,   206,   206,   206,   206,   206,   214,   214,   214,   214,   214,   214,
   214,   214,   222,   222,   222,   222,   222,   222,   222,   222,   222,   231,   231,   231,   231,   231,
   231,   231,   231,   239,   239,   239,   239,   239,   239,   239,   239,   247,   247,   247,   247,   247,
   247,   247,   247,   255,   255,   255,   255,   255,   255,   255,   255,   255,   255,   255,   255,   255};
static const uint8_t qg[256+16] = {
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     4,     4,     4,     4,     8,
     8,     8,     8,    12,    12,    12,    12,    16,    16,    16,    16,    20,    20,    20,    20,    24,
    24,    24,    24,    28,    28,    28,    28,    32,    32,    32,    32,    36,    36,    36,    36,    40,
    40,    40,    40,    44,    44,    44,    44,    48,    48,    48,    48,    52,    52,    52,    52,    56,
    56,    56,    56,    60,    60,    60,    60,    65,    65,    65,    65,    69,    69,    69,    69,    73,
    73,    73,    73,    77,    77,    77,    77,    81,    81,    81,    81,    85,    85,    85,    85,    85,
    89,    89,    89,    89,    93,    93,    93,    93,    97,    97,    97,    97,   101,   101,   101,   101,
   105,   105,   105,   105,   109,   109,   109,   109,   113,   113,   113,   113,   117,   117,   117,   117,
   121,   121,   121,   121,   125,   125,   125,   125,   130,   130,   130,   130,   134,   134,   134,   134,
   138,   138,   138,   138,   142,   142,   142,   142,   146,   146,   146,   146,   150,   150,   150,   150,
   154,   154,   154,   154,   158,   158,   158,   158,   162,   162,   162,   162,   166,   166,   166,   166,
   170,   170,   170,   170,   170,   174,   174,   174,   174,   178,   178,   178,   178,   182,   182,   182,
   182,   186,   186,   186,   186,   190,   190,   190,   190,   195,   195,   195,   195,   199,   199,   199,
   199,   203,   203,   203,   203,   207,   207,   207,   207,   211,   211,   211,   211,   215,   215,   215,
   215,   219,   219,   219,   219,   223,   223,   223,   223,   227,   227,   227,   227,   231,   231,   231,
   231,   235,   235,   235,   235,   239,   239,   239,   239,   243,   243,   243,   243,   247,   247,   247,
   247,   251,   251,   251,   251,   255,   255,   255,   255,   255,   255,   255,   255,   255,   255,   255};
#else
static uint8_t e5[32];
static uint8_t e6[64];
static uint8_t qrb[256+16];
static uint8_t qg[256+16];

void InitDither()
{
    for( int i=0; i<32; i++ )
    {
        e5[i] = (i<<3) | (i>>2);
    }
    for( int i=0; i<64; i++ )
    {
        e6[i] = (i<<2) | (i>>4);
    }
    for( int i=0; i<256+16; i++ )
    {
        int v = std::min( std::max( 0, i-8 ), 255 );
        qrb[i] = e5[mul8bit( v, 31 )];
        qg[i] = e6[mul8bit( v, 63 )];
    }
}
#endif

void Dither( uint8_t* data )
{
    int err[8];
    int* ep1 = err;
    int* ep2 = err+4;

    for( int ch=0; ch<3; ch++ )
    {
        uint8_t* ptr = data + ch;
        const uint8_t* quant = (ch == 1) ? qg + 8 : qrb + 8;
        memset( err, 0, sizeof( err ) );

        for( int y=0; y<4; y++ )
        {
            uint8_t tmp;
            tmp = quant[ptr[0] + ( ( 3 * ep2[1] + 5 * ep2[0] ) >> 4 )];
            ep1[0] = ptr[0] - tmp;
            ptr[0] = tmp;
            tmp = quant[ptr[4] + ( ( 7 * ep1[0] + 3 * ep2[2] + 5 * ep2[1] + ep2[0] ) >> 4 )];
            ep1[1] = ptr[4] - tmp;
            ptr[4] = tmp;
            tmp = quant[ptr[8] + ( ( 7 * ep1[1] + 3 * ep2[3] + 5 * ep2[2] + ep2[1] ) >> 4 )];
            ep1[2] = ptr[8] - tmp;
            ptr[8] = tmp;
            tmp = quant[ptr[12] + ( ( 7 * ep1[2] + 5 * ep2[3] + ep2[2] ) >> 4 )];
            ep1[3] = ptr[12] - tmp;
            ptr[12] = tmp;
            ptr += 16;
            std::swap( ep1, ep2 );
        }
    }
}
